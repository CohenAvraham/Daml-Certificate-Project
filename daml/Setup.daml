module Setup where

import Daml.Script
import Main

data EnvironmentParties = EnvironmentParties with
    manager: Party
    recruiter: Party
    inspector: Party
    talent: Party
    recruiter2 : Party


setupParties : Script EnvironmentParties
setupParties = do
  manager <- allocatePartyWithHint "Manager" (PartyIdHint "Manager")
  recruiter <- allocatePartyWithHint "Recruiter" (PartyIdHint "Recruiter")
  recruiter2 <- allocatePartyWithHint "Recruiter2" (PartyIdHint "Recruiter2")
  inspector <- allocatePartyWithHint "Inspector" (PartyIdHint "Inspector")
  talent <- allocatePartyWithHint "Talent" (PartyIdHint "Talent")

  managerId <- validateUserId "manager"
  recruiterId <- validateUserId "recruiter"
  recruiter2Id <- validateUserId "recruiter2"
  inspectorId <- validateUserId "inspector"
  talentId <- validateUserId "talent"

  createUser (User managerId (Some manager)) [CanActAs manager]
  createUser (User recruiterId (Some recruiter)) [CanActAs recruiter]
  createUser (User recruiter2Id (Some recruiter2)) [CanActAs recruiter2]
  createUser (User inspectorId (Some inspector)) [CanActAs inspector]
  createUser (User talentId (Some talent)) [CanActAs talent]

  return EnvironmentParties with ..

initSetup : Script (ContractId Institution, EnvironmentParties)
initSetup = script do

  environmentParties@EnvironmentParties{..} <- setupParties

  institution <- submit manager do
    createCmd Institution with
      students = [talent]
      inspectors = [inspector]
      recruiters = [recruiter, recruiter2]
      ..

  return (institution, environmentParties)


